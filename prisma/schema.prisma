generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String
  sector    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  leads     Lead[]

  @@index([name])
}

model Lead {
  id              String        @id @default(uuid())
  firstName       String
  lastName        String
  email           String
  phoneNumber     String?
  status          LeadStatus    @default(NUEVO)
  companyId       String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  acquisitionCost Decimal?
  annualRevenue   Decimal?
  campaignId      String?
  companyName     String?
  companySize     String?
  industry        String?
  lastContactAt   DateTime?
  leadScore       Int?
  leadSource      String?
  utmCampaign     String?
  utmMedium       String?
  utmSource       String?
  whatsappId      String?      @unique
  lastMessageAt   DateTime?
  contactLogs     Contact_Log[]
  interactions    Interaction[]
  company         Company       @relation(fields: [companyId], references: [id])

  @@index([status])
  @@index([firstName, lastName])
  @@index([phoneNumber])
  @@index([whatsappId])
}

model Product {
  id                   String               @id @default(uuid())
  name                 String               @unique
  description          String?
  createdAt            DateTime             @default(now())
  updatedAt            DateTime             @updatedAt
  templates            Template[]
  templateInteractions TemplateInteraction[]
}

model Template {
  id          String        @id @default(uuid())
  title       String       /// TÃ­tulo de la plantilla
  body        String       /// Contenido principal de la plantilla
  productId   String?      /// ID del producto asociado (opcional)
  type        TemplateType /// Tipo de plantilla (WELCOME, FOLLOW_UP, CLOSING)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  stepsJson   Json?        @map("steps") /// Pasos de la plantilla en formato JSON (opcional)
  tags        String[]     @default([])  /// Etiquetas para categorizar la plantilla
  contactLogs Contact_Log[] /// Registros de contacto usando esta plantilla
  product     Product?     @relation(fields: [productId], references: [id])

  @@index([title])
  @@index([tags])
  @@map("Template")
}

model TemplateInteraction {
  id        String      @id @default(uuid())
  productId String
  type      TemplateType
  notes     String
  result    String
  examples  Json        @default("[]")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  product   Product     @relation(fields: [productId], references: [id])
}

model Contact_Log {
  id         String        @id @default(uuid())
  leadId     String
  templateId String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  status     ContactStatus @default(PENDIENTE)
  lead       Lead          @relation(fields: [leadId], references: [id])
  template   Template      @relation(fields: [templateId], references: [id])

  @@index([status])
  @@index([createdAt])
}

model Interaction {
  id             String          @id @default(uuid())
  leadId         String
  type           InteractionType
  notes          String?
  result         String?
  scheduledAt    DateTime?
  completedAt    DateTime?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  whatsappStatus String?
  messageId      String?
  lead           Lead            @relation(fields: [leadId], references: [id])

  @@index([leadId])
  @@index([scheduledAt])
  @@index([type])
}

enum LeadStatus {
  NUEVO       @map("NUEVO")
  CONTACTADO  @map("CONTACTADO")
  CALIFICADO  @map("CALIFICADO")
  CLIENTE     @map("CLIENTE")
  PERDIDO     @map("PERDIDO")
}

enum ContactStatus {
  PENDIENTE   @map("PENDIENTE")
  ENVIADO     @map("ENVIADO")
  ENTREGADO   @map("ENTREGADO")
  LEIDO       @map("LEIDO")
  RESPONDIDO  @map("RESPONDIDO")
  FALLIDO     @map("FALLIDO")
}

enum InteractionType {
  CALL        @map("LLAMADA")
  EMAIL       @map("CORREO")
  MEETING     @map("REUNION")
  DEMO        @map("DEMO")
  WHATSAPP    @map("WHATSAPP")
  OTHER       @map("OTRO")
}

enum TemplateType {
  WELCOME     @map("BIENVENIDA")   /// Plantilla de bienvenida para nuevos leads
  FOLLOW_UP   @map("SEGUIMIENTO")  /// Plantilla de seguimiento para leads existentes
  CLOSING     @map("CIERRE")       /// Plantilla para cerrar ventas
}

enum ProductType {
  CV_SCANNER              @map("CV_SCANNER")
  PEOPLE_MANAGEMENT       @map("ADMIN_PERSONAS")
  AUTOMATED_CALLS         @map("LLAMADAS_AUTOMATIZADAS")
}
