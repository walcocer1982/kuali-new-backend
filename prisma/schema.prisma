generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String
  sector    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  leads     Lead[]

  @@index([name])
}

model Lead {
  id            String   @id @default(uuid())
  firstName     String
  lastName      String
  email         String   @unique
  phoneNumber   String?
  
  // Campos de empresa
  companyId     String
  companyName   String?
  industry      String?
  companySize   String?  // (e.g., "1-10", "11-50", "51-200", etc.)
  annualRevenue Decimal? // Ingresos anuales estimados
  
  // Campos de seguimiento
  status        LeadStatus @default(NEW)
  leadSource    String?    // (e.g., "website", "referral", "campaign")
  lastContactAt DateTime?
  leadScore     Int?       // Puntuaci√≥n del lead (0-100)
  
  // Campos de marketing
  campaignId    String?
  utmSource     String?
  utmMedium     String?
  utmCampaign   String?
  acquisitionCost Decimal?
  
  // Relaciones
  interactions  Interaction[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  contactLogs   Contact_Log[]
  company       Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([status])
  @@index([firstName, lastName])
}

model Template {
  id          String        @id @default(uuid())
  title       String
  body        String
  stepsJson   Json?        @map("steps")
  tags        String[]     @default([])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  contactLogs Contact_Log[]

  @@map("Template")
  @@index([title])
  @@index([tags])
}

model Contact_Log {
  id         String        @id @default(uuid())
  leadId     String
  templateId String
  status     ContactStatus @default(PENDIENTE)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  lead       Lead          @relation(fields: [leadId], references: [id], onDelete: Cascade)
  template   Template      @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@index([status])
  @@index([createdAt])
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  OPPORTUNITY
  CUSTOMER
  LOST
}

enum ContactStatus {
  PENDIENTE
  ENVIADO
  ENTREGADO
  LEIDO
  RESPONDIDO
  FALLIDO
}

model Interaction {
  id          String    @id @default(uuid())
  leadId      String
  lead        Lead      @relation(fields: [leadId], references: [id])
  type        InteractionType
  notes       String?   @db.Text
  result      String?
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum InteractionType {
  CALL
  EMAIL
  MEETING
  DEMO
  OTHER
}
