generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String
  sector    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  leads     Lead[]

  @@index([name])
}

model Lead {
  id          String        @id @default(uuid())
  firstName   String
  lastName    String
  email       String        @unique
  phoneNumber String?
  linkedinUrl String?
  role        String?
  seniority   String?
  status      LeadStatus    @default(NUEVO)
  companyId   String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  contactLogs Contact_Log[]
  company     Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([status])
  @@index([firstName, lastName])
}

model Template {
  id          String        @id @default(uuid())
  title       String
  body        String
  steps       Json?         @db.JsonB
  tags        String[]      @default([])
  contactLogs Contact_Log[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("Template")
  @@index([title])
  @@index([tags])
}

model Contact_Log {
  id         String        @id @default(uuid())
  leadId     String
  templateId String
  status     ContactStatus @default(PENDIENTE)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  lead       Lead          @relation(fields: [leadId], references: [id], onDelete: Cascade)
  template   Template      @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@index([status])
  @@index([createdAt])
}

enum LeadStatus {
  NUEVO
  CONTACTADO
  INTERESADO
  CALIFICADO
  OPORTUNIDAD
  CERRADO
  DESCARTADO
}

enum ContactStatus {
  PENDIENTE
  ENVIADO
  ENTREGADO
  LEIDO
  RESPONDIDO
  FALLIDO
}
