// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
  output          = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String
  sector    String?
  leads     Lead[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([name])
}

model Lead {
  id              String         @id @default(uuid())
  firstName       String
  lastName        String
  email           String
  phoneNumber     String?
  status          LeadStatus     @default(NEW)
  companyId       String
  company         Company        @relation(fields: [companyId], references: [id])
  contactLogs     Contact_Log[]
  interactions    Interaction[]
  
  // Campos de empresa
  companyName     String?
  industry        String?
  companySize     String?
  annualRevenue    Decimal?
  
  // Campos de seguimiento
  leadSource      String?
  lastContactAt   DateTime?
  leadScore       Int?
  
  // Campos de marketing
  campaignId      String?
  utmSource       String?
  utmMedium       String?
  utmCampaign     String?
  acquisitionCost Decimal?
  
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  deletedAt       DateTime?

  @@index([status])
  @@index([firstName, lastName])
}

model Template {
  id            String        @id @default(uuid())
  title         String
  body          String
  stepsJson     Json?         @map("steps")
  tags          String[]      @default([])
  contactLogs   Contact_Log[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([title])
  @@index([tags])
  @@map("Template")
}

model Contact_Log {
  id          String        @id @default(uuid())
  leadId      String
  lead        Lead          @relation(fields: [leadId], references: [id])
  templateId  String
  template    Template      @relation(fields: [templateId], references: [id])
  status      ContactStatus @default(PENDIENTE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index([status])
  @@index([createdAt])
}

model Interaction {
  id            String          @id @default(uuid())
  leadId        String
  lead          Lead            @relation(fields: [leadId], references: [id])
  type          InteractionType
  notes         String?
  result        String?
  scheduledAt   DateTime?
  completedAt   DateTime?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  OPPORTUNITY
  CUSTOMER
  LOST
}

enum ContactStatus {
  PENDIENTE
  ENVIADO
  ENTREGADO
  LEIDO
  RESPONDIDO
  FALLIDO
}

enum InteractionType {
  CALL
  EMAIL
  MEETING
  DEMO
  OTHER
}
