generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String    @id @default(uuid())
  name      String
  sector    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  leads     Lead[]

  @@index([name])
}

model Lead {
  id              String        @id @default(uuid())
  firstName       String
  lastName        String
  email           String
  phoneNumber     String?
  status          LeadStatus    @default(NUEVO)
  companyId       String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  deletedAt       DateTime?
  acquisitionCost Decimal?
  annualRevenue   Decimal?
  campaignId      String?
  companyName     String?
  companySize     String?
  industry        String?
  lastContactAt   DateTime?
  leadScore       Int?
  leadSource      String?
  utmCampaign     String?
  utmMedium       String?
  utmSource       String?
  contactLogs     Contact_Log[]
  interactions    Interaction[]
  company         Company       @relation(fields: [companyId], references: [id])

  @@index([status])
  @@index([firstName, lastName])
}

model Template {
  id          String        @id @default(uuid())
  title       String
  body        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  stepsJson   Json?         @map("steps")
  tags        String[]      @default([])
  contactLogs Contact_Log[]

  @@index([title])
  @@index([tags])
  @@map("Template")
}

model Contact_Log {
  id         String        @id @default(uuid())
  leadId     String
  templateId String
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  status     ContactStatus @default(PENDIENTE)
  lead       Lead          @relation(fields: [leadId], references: [id])
  template   Template      @relation(fields: [templateId], references: [id])

  @@index([status])
  @@index([createdAt])
}

model Interaction {
  id          String          @id @default(uuid())
  leadId      String
  type        InteractionType
  notes       String?
  result      String?
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  lead        Lead            @relation(fields: [leadId], references: [id])
}

enum LeadStatus {
  NUEVO
  CONTACTADO
  CALIFICADO
  OPORTUNIDAD
  CLIENTE
  PERDIDO
}

enum ContactStatus {
  PENDIENTE
  ENVIADO
  ENTREGADO
  LEIDO
  RESPONDIDO
  FALLIDO
}

enum InteractionType {
  CALL
  EMAIL
  MEETING
  DEMO
  OTHER
}
